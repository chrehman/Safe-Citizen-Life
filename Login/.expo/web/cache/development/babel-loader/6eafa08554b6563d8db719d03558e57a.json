{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"F:\\\\React Native\\\\MapExpo\\\\frontend\\\\screens\\\\HomeScreen.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useTheme } from '@react-navigation/native';\nimport * as ImagePicker from \"react-native-image-picker\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var options = {\n    title: 'Select Avatar',\n    customButtons: [{\n      name: 'fb',\n      title: 'Choose Photo from Facebook'\n    }],\n    storageOptions: {\n      skipBackup: true,\n      path: 'images'\n    }\n  };\n\n  var chooseImage = function chooseImage() {\n    var options = {\n      title: 'Select Image',\n      customButtons: [{\n        name: 'customOptionKey',\n        title: 'Choose Photo from Custom Option'\n      }],\n      storageOptions: {\n        skipBackup: true,\n        path: 'images'\n      }\n    };\n    ImagePicker.showImagePicker(options, function (response) {\n      console.log('Response = ', response);\n\n      if (response.didCancel) {\n        console.log('User cancelled image picker');\n      } else if (response.error) {\n        console.log('ImagePicker Error: ', response.error);\n      } else if (response.customButton) {\n        console.log('User tapped custom button: ', response.customButton);\n        alert(response.customButton);\n      } else {\n        var source = {\n          uri: response.uri\n        };\n        console.log('response', JSON.stringify(response));\n      }\n    });\n  };\n\n  var launchCamera = function launchCamera() {\n    var options = {\n      storageOptions: {\n        skipBackup: true,\n        path: 'images'\n      }\n    };\n    ImagePicker.launchCamera(options, function (response) {\n      console.log('Response = ', response);\n\n      if (response.didCancel) {\n        console.log('User cancelled image picker');\n      } else if (response.error) {\n        console.log('ImagePicker Error: ', response.error);\n      } else if (response.customButton) {\n        console.log('User tapped custom button: ', response.customButton);\n        alert(response.customButton);\n      } else {\n        var source = {\n          uri: response.uri\n        };\n        console.log('response', JSON.stringify(response));\n      }\n    });\n  };\n\n  var launchImageLibrary = function launchImageLibrary() {\n    var options = {\n      storageOptions: {\n        skipBackup: true,\n        path: 'images'\n      }\n    };\n    ImagePicker.launchImageLibrary(options, function (response) {\n      console.log('Response = ', response);\n\n      if (response.didCancel) {\n        console.log('User cancelled image picker');\n      } else if (response.error) {\n        console.log('ImagePicker Error: ', response.error);\n      } else if (response.customButton) {\n        console.log('User tapped custom button: ', response.customButton);\n        alert(response.customButton);\n      } else {\n        var source = {\n          uri: response.uri\n        };\n        console.log('response', JSON.stringify(response));\n      }\n    });\n  };\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var theme = useTheme();\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    animated: true,\n    barStyle: \"light-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: colors.text\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Home Screen\"), React.createElement(Button, {\n    title: \"Go to details screen\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Details\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.btnParentSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return chooseImage();\n    },\n    style: styles.btnSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Choose File\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      var options = {\n        storageOptions: {\n          skipBackup: true,\n          path: 'images'\n        }\n      };\n      ImagePicker.launchCamera(options, function (response) {\n        console.log('Response = ', response);\n\n        if (response.didCancel) {\n          console.log('User cancelled image picker');\n        } else if (response.error) {\n          console.log('ImagePicker Error: ', response.error);\n        } else if (response.customButton) {\n          console.log('User tapped custom button: ', response.customButton);\n          alert(response.customButton);\n        } else {\n          var source = {\n            uri: response.uri\n          };\n          console.log('response', JSON.stringify(response));\n        }\n      });\n    },\n    style: styles.btnSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, \"Directly Launch Camera\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return launchImageLibrary();\n    },\n    style: styles.btnSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, \"Directly Launch Image Library\"))));\n};\n\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["F:/React Native/MapExpo/frontend/screens/HomeScreen.js"],"names":["React","useTheme","ImagePicker","HomeScreen","navigation","options","title","customButtons","name","storageOptions","skipBackup","path","chooseImage","showImagePicker","response","console","log","didCancel","error","customButton","alert","source","uri","JSON","stringify","launchCamera","launchImageLibrary","colors","theme","styles","container","color","text","navigate","btnParentSection","btnSection","btnText","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text,Button, StyleSheet, StatusBar,TouchableOpacity } from 'react-native';\nimport { useTheme } from '@react-navigation/native';\n// import ImagePicker from 'react-native-image-picker';\nimport * as ImagePicker from \"react-native-image-picker\"\n// import {  Button } from 'native-base';\nconst HomeScreen = ({navigation}) => {\n\n  const options = {\n  title: 'Select Avatar',\n  customButtons: [{ name: 'fb', title: 'Choose Photo from Facebook' }],\n  storageOptions: {\n    skipBackup: true,\n    path: 'images',\n  },\n};\n const chooseImage = () => {\n    let options = {\n      title: 'Select Image',\n      customButtons: [\n        { name: 'customOptionKey', title: 'Choose Photo from Custom Option' },\n      ],\n      storageOptions: {\n        skipBackup: true,\n        path: 'images',\n      },\n    };\n    ImagePicker.showImagePicker(options, (response) => {\n      console.log('Response = ', response);\n\n      if (response.didCancel) {\n        console.log('User cancelled image picker');\n      } else if (response.error) {\n        console.log('ImagePicker Error: ', response.error);\n      } else if (response.customButton) {\n        console.log('User tapped custom button: ', response.customButton);\n        alert(response.customButton);\n      } else {\n        const source = { uri: response.uri };\n\n        // You can also display the image using data:\n        // const source = { uri: 'data:image/jpeg;base64,' + response.data };\n        // alert(JSON.stringify(response));s\n        console.log('response', JSON.stringify(response));\n        // this.setState({\n        //   filePath: response,\n        //   fileData: response.data,\n        //   fileUri: response.uri\n        // });\n      }\n    });\n  }\n\n  const launchCamera = () => {\n    let options = {\n      storageOptions: {\n        skipBackup: true,\n        path: 'images',\n      },\n    };\n    ImagePicker.launchCamera(options, (response) => {\n      console.log('Response = ', response);\n\n      if (response.didCancel) {\n        console.log('User cancelled image picker');\n      } else if (response.error) {\n        console.log('ImagePicker Error: ', response.error);\n      } else if (response.customButton) {\n        console.log('User tapped custom button: ', response.customButton);\n        alert(response.customButton);\n      } else {\n        const source = { uri: response.uri };\n        console.log('response', JSON.stringify(response));\n        // this.setState({\n        //   filePath: response,\n        //   fileData: response.data,\n        //   fileUri: response.uri\n        // });\n      }\n    });\n\n  }\n\n  const launchImageLibrary = () => {\n    let options = {\n      storageOptions: {\n        skipBackup: true,\n        path: 'images',\n      },\n    };\n    ImagePicker.launchImageLibrary(options, (response) => {\n      console.log('Response = ', response);\n\n      if (response.didCancel) {\n        console.log('User cancelled image picker');\n      } else if (response.error) {\n        console.log('ImagePicker Error: ', response.error);\n      } else if (response.customButton) {\n        console.log('User tapped custom button: ', response.customButton);\n        alert(response.customButton);\n      } else {\n        const source = { uri: response.uri };\n        console.log('response', JSON.stringify(response));\n        // this.setState({\n        //   filePath: response,\n        //   fileData: response.data,\n        //   fileUri: response.uri\n        // });\n      }\n    });\n\n  }\n  const { colors } = useTheme();\n\n  const theme = useTheme();\n  \n    return (\n      <View style={styles.container}>\n        {/* <StatusBar barStyle= { theme.dark ? \"light-content\" : \"dark-content\" }/> */}\n        <StatusBar animated={true} barStyle='light-content' />\n        <Text style={{color: colors.text}}>Home Screen</Text>\n      <Button\n        title=\"Go to details screen\"\n        onPress={() => navigation.navigate(\"Details\")}\n      />\n      \n            <View style={styles.btnParentSection}>\n              <TouchableOpacity onPress={()=> chooseImage()} style={styles.btnSection}  >\n                <Text style={styles.btnText}>Choose File</Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity onPress={()=> {let options = {\n      storageOptions: {\n        skipBackup: true,\n        path: 'images',\n      },\n    };\n    ImagePicker.launchCamera(options, (response) => {\n      console.log('Response = ', response);\n\n      if (response.didCancel) {\n        console.log('User cancelled image picker');\n      } else if (response.error) {\n        console.log('ImagePicker Error: ', response.error);\n      } else if (response.customButton) {\n        console.log('User tapped custom button: ', response.customButton);\n        alert(response.customButton);\n      } else {\n        const source = { uri: response.uri };\n        console.log('response', JSON.stringify(response));\n        // this.setState({\n        //   filePath: response,\n        //   fileData: response.data,\n        //   fileUri: response.uri\n        // });\n      }\n    }); }} style={styles.btnSection}  >\n                <Text style={styles.btnText}>Directly Launch Camera</Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity onPress={()=> launchImageLibrary()} style={styles.btnSection}  >\n                <Text style={styles.btnText}>Directly Launch Image Library</Text>\n              </TouchableOpacity>\n            </View>\n       {/* <Button>\n            <Text>Click Me!</Text>\n          </Button> */}\n      </View>\n    );\n};\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1, \n    alignItems: 'center', \n    justifyContent: 'center'\n  },\n});\n"]},"metadata":{},"sourceType":"module"}