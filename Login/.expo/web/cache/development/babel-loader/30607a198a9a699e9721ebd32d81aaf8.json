{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\React Native\\\\MapExpo\\\\frontend\\\\screens\\\\ForgotPasswordScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport * as Animatable from 'react-native-animatable';\nimport firebase from 'firebase/app';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTheme } from 'react-native-paper';\nimport { AuthContext } from \"../components/context\";\nimport Users from \"../model/users\";\n\nvar ForgotPasswordScreen = function ForgotPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState({\n    username: '',\n    check_textInputChange: false,\n    isValidUser: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var validate = function validate(text) {\n    var reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\n\n    if (reg.test(text) === false) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  var textInputChange = function textInputChange(val) {\n    if (validate(val)) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        username: val,\n        check_textInputChange: true,\n        isValidUser: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        username: val,\n        check_textInputChange: false,\n        isValidUser: false\n      }));\n    }\n  };\n\n  var updateSecureTextEntry = function updateSecureTextEntry() {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      secureTextEntry: !data.secureTextEntry\n    }));\n  };\n\n  var loginHandle = function loginHandle(username, password) {\n    console.log(\"HEllo\");\n\n    if (data.username.length == 0) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidUser: false\n      }));\n      return;\n    }\n\n    var auth = firebase.auth();\n    auth.sendPasswordResetEmail(data.username).then(function () {\n      Alert.alert('Email Sent', \"Password recovery link has been sent to your email address\");\n    }).catch(function (error) {\n      console.log(error);\n      Alert.alert(error.code, error.message);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"#009387\",\n    barStyle: \"light-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text_header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Recover Password Now!\")), React.createElement(Animatable.View, {\n    animation: \"fadeInUpBig\",\n    style: [styles.footer, {\n      backgroundColor: colors.background\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [styles.text_footer, {\n      color: colors.text\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Email\"), React.createElement(View, {\n    style: styles.action,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"email-outline\",\n    size: 20,\n    color: colors.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Your Email Address\",\n    placeholderTextColor: \"#666666\",\n    style: [styles.textInput, {\n      color: colors.text\n    }],\n    autoCapitalize: \"none\",\n    value: data.username,\n    keyboardType: \"email-address\",\n    onChangeText: function onChangeText(val) {\n      return textInputChange(val);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }), data.check_textInputChange ? React.createElement(Animatable.View, {\n    animation: \"bounceIn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, React.createElement(Feather, {\n    name: \"check-circle\",\n    color: \"green\",\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  })) : null), data.isValidUser ? null : React.createElement(Animatable.View, {\n    animation: \"fadeInLeft\",\n    duration: 500,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.errorMsg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, \"Invalid Email \")), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.signIn,\n    onPress: function onPress() {\n      loginHandle(data.username);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#08d4c4', '#01ab9d'],\n    style: styles.signIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: [styles.textSign, {\n      color: '#fff'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, \"Send Recovery Link\")))), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.signIn,\n    onPress: function onPress() {\n      navigation.navigate('SignInScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#08d4c4', '#01ab9d'],\n    style: styles.signIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: [styles.textSign, {\n      color: '#fff'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 29\n    }\n  }, \"Back To Sign In\"))))));\n};\n\nexport default ForgotPasswordScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#009387'\n  },\n  header: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    paddingHorizontal: 20,\n    paddingBottom: 50\n  },\n  footer: {\n    flex: 3,\n    backgroundColor: '#fff',\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    paddingHorizontal: 20,\n    paddingVertical: 30\n  },\n  text_header: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  text_footer: {\n    color: '#05375a',\n    fontSize: 18\n  },\n  action: {\n    flexDirection: 'row',\n    marginTop: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f2f2f2',\n    paddingBottom: 5\n  },\n  actionError: {\n    flexDirection: 'row',\n    marginTop: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#FF0000',\n    paddingBottom: 5\n  },\n  textInput: {\n    flex: 1,\n    marginTop: Platform.OS === 'ios' ? 0 : -12,\n    paddingLeft: 10,\n    color: '#05375a'\n  },\n  errorMsg: {\n    color: '#FF0000',\n    fontSize: 14\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 50\n  },\n  signIn: {\n    width: '100%',\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10\n  },\n  textSign: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["F:/React Native/MapExpo/frontend/screens/ForgotPasswordScreen.js"],"names":["React","Animatable","firebase","LinearGradient","FontAwesome","Feather","MaterialCommunityIcons","useTheme","AuthContext","Users","ForgotPasswordScreen","navigation","useState","username","check_textInputChange","isValidUser","data","setData","colors","validate","text","reg","test","textInputChange","val","updateSecureTextEntry","secureTextEntry","loginHandle","password","console","log","length","auth","sendPasswordResetEmail","then","Alert","alert","catch","error","code","message","styles","container","header","text_header","footer","backgroundColor","background","text_footer","color","action","textInput","errorMsg","button","signIn","textSign","navigate","StyleSheet","create","flex","justifyContent","paddingHorizontal","paddingBottom","borderTopLeftRadius","borderTopRightRadius","paddingVertical","fontWeight","fontSize","flexDirection","marginTop","borderBottomWidth","borderBottomColor","actionError","Platform","OS","paddingLeft","alignItems","width","height","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    TouchableOpacity,\r\n    TextInput,\r\n    Platform,\r\n    StyleSheet,\r\n    StatusBar,\r\n    Alert, Linking\r\n} from 'react-native';\r\nimport * as Animatable from 'react-native-animatable';\r\n// import LinearGradient from 'react-native-linear-gradient';\r\nimport firebase from 'firebase/app';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\r\nimport Feather from 'react-native-vector-icons/Feather';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { useTheme } from 'react-native-paper';\r\n\r\nimport { AuthContext } from '../components/context';\r\n\r\nimport Users from '../model/users';\r\n\r\nconst ForgotPasswordScreen = ({ navigation }) => {\r\n\r\n    const [data, setData] = React.useState({\r\n        username: '',\r\n        check_textInputChange: false,\r\n        isValidUser: true,\r\n    });\r\n\r\n    const { colors } = useTheme();\r\n\r\n    const validate = (text) => {\r\n        // console.log(text);\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\r\n        if (reg.test(text) === false) {\r\n            // console.log(\"Email is Not Correct\");\r\n            return false;\r\n        }\r\n        else {\r\n            // console.log(\"Email is Correct\");\r\n            return true\r\n        }\r\n    }\r\n\r\n    const textInputChange = (val) => {\r\n        if (validate(val)) {\r\n            setData({\r\n                ...data,\r\n                username: val,\r\n                check_textInputChange: true,\r\n                isValidUser: true\r\n            });\r\n        } else {\r\n            setData({\r\n                ...data,\r\n                username: val,\r\n                check_textInputChange: false,\r\n                isValidUser: false\r\n            });\r\n        }\r\n    }\r\n\r\n    const updateSecureTextEntry = () => {\r\n        setData({\r\n            ...data,\r\n            secureTextEntry: !data.secureTextEntry\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const loginHandle = (username, password) => {\r\n\r\n\r\n        console.log(\"HEllo\")\r\n        if (data.username.length == 0) {\r\n            setData({\r\n                ...data,\r\n                isValidUser: false\r\n            })\r\n            return\r\n        }\r\n        var auth = firebase.auth();\r\n\r\n        auth.sendPasswordResetEmail(data.username).then(function () {\r\n            // Email sent.\r\n            Alert.alert('Email Sent',\"Password recovery link has been sent to your email address\")\r\n        }).catch(function (error) {\r\n            // An error happened.\r\n            console.log(error)\r\n            Alert.alert(error.code,error.message)\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <StatusBar backgroundColor='#009387' barStyle=\"light-content\" />\r\n            <View style={styles.header}>\r\n                <Text style={styles.text_header}>Recover Password Now!</Text>\r\n            </View>\r\n            <Animatable.View\r\n                animation=\"fadeInUpBig\"\r\n                style={[styles.footer, {\r\n                    backgroundColor: colors.background\r\n                }]}\r\n            >\r\n                <Text style={[styles.text_footer, {\r\n                    color: colors.text\r\n                }]}>Email</Text>\r\n                <View style={styles.action}>\r\n                    <MaterialCommunityIcons name=\"email-outline\" size={20} color={colors.text} />\r\n                    <TextInput\r\n                        placeholder=\"Your Email Address\"\r\n                        placeholderTextColor=\"#666666\"\r\n                        style={[styles.textInput, {\r\n                            color: colors.text\r\n                        }]}\r\n                        autoCapitalize=\"none\"\r\n                        value={data.username}\r\n                        keyboardType=\"email-address\"\r\n                        onChangeText={(val) => textInputChange(val)}\r\n                    // onEndEditing={(e)=>handleValidUser(e.nativeEvent.text)}\r\n                    />\r\n                    {data.check_textInputChange ?\r\n                        <Animatable.View\r\n                            animation=\"bounceIn\"\r\n                        >\r\n                            <Feather\r\n                                name=\"check-circle\"\r\n                                color=\"green\"\r\n                                size={20}\r\n                            />\r\n                        </Animatable.View>\r\n                        : null}\r\n                </View>\r\n                {data.isValidUser ? null :\r\n                    <Animatable.View animation=\"fadeInLeft\" duration={500}>\r\n                        <Text style={styles.errorMsg}>Invalid Email </Text>\r\n                    </Animatable.View>\r\n                }\r\n\r\n\r\n                <View style={styles.button}>\r\n                    <TouchableOpacity\r\n                        style={styles.signIn}\r\n                        onPress={() => { loginHandle(data.username) }}\r\n                    >\r\n                        <LinearGradient\r\n                            colors={['#08d4c4', '#01ab9d']}\r\n                            style={styles.signIn}\r\n                        >\r\n                            <Text style={[styles.textSign, {\r\n                                color: '#fff'\r\n                            }]}>Send Recovery Link</Text>\r\n                        </LinearGradient>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={styles.button}>\r\n                    <TouchableOpacity\r\n                        style={styles.signIn}\r\n                        onPress={() => { navigation.navigate('SignInScreen') }}\r\n                    >\r\n                        <LinearGradient\r\n                            colors={['#08d4c4', '#01ab9d']}\r\n                            style={styles.signIn}\r\n                        >\r\n                            <Text style={[styles.textSign, {\r\n                                color: '#fff'\r\n                            }]}>Back To Sign In</Text>\r\n                        </LinearGradient>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </Animatable.View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default ForgotPasswordScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#009387'\r\n    },\r\n    header: {\r\n        flex: 1,\r\n        justifyContent: 'flex-end',\r\n        paddingHorizontal: 20,\r\n        paddingBottom: 50\r\n    },\r\n    footer: {\r\n        flex: 3,\r\n        backgroundColor: '#fff',\r\n        borderTopLeftRadius: 30,\r\n        borderTopRightRadius: 30,\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 30\r\n    },\r\n    text_header: {\r\n        color: '#fff',\r\n        fontWeight: 'bold',\r\n        fontSize: 30\r\n    },\r\n    text_footer: {\r\n        color: '#05375a',\r\n        fontSize: 18\r\n    },\r\n    action: {\r\n        flexDirection: 'row',\r\n        marginTop: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#f2f2f2',\r\n        paddingBottom: 5\r\n    },\r\n    actionError: {\r\n        flexDirection: 'row',\r\n        marginTop: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#FF0000',\r\n        paddingBottom: 5\r\n    },\r\n    textInput: {\r\n        flex: 1,\r\n        marginTop: Platform.OS === 'ios' ? 0 : -12,\r\n        paddingLeft: 10,\r\n        color: '#05375a',\r\n    },\r\n    errorMsg: {\r\n        color: '#FF0000',\r\n        fontSize: 14,\r\n    },\r\n    button: {\r\n        alignItems: 'center',\r\n        marginTop: 50\r\n    },\r\n    signIn: {\r\n        width: '100%',\r\n        height: 50,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 10\r\n    },\r\n    textSign: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}