{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\React Native\\\\MapExpo\\\\App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer, DefaultTheme as NavigationDefaultTheme, DarkTheme as NavigationDarkTheme } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { Provider as PaperProvider, DefaultTheme as PaperDefaultTheme, DarkTheme as PaperDarkTheme } from 'react-native-paper';\nimport { firebaseConfig } from \"./firebase\";\nimport { DrawerContent } from \"./frontend/screens/DrawerContent\";\nimport MainTabScreen from \"./frontend/screens/MainTabScreen\";\nimport SupportScreen from \"./frontend/screens/SupportScreen\";\nimport SettingsScreen from \"./frontend/screens/SettingsScreen\";\nimport BookmarkScreen from \"./frontend/screens/BookmarkScreen\";\nimport VerifyEmail from \"./frontend/screens/VerifyEmail\";\nimport { AuthContext } from \"./frontend/components/context\";\nimport firebase from 'firebase/app';\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport RootStackScreen from \"./frontend/screens/RootStackScreen\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nvar Drawer = createDrawerNavigator();\n\nvar App = function App() {\n  var _React$useState = React.useState({\n    isLoadingComplete: false,\n    isAuthenticationReady: false,\n    isAuthenticated: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      fire = _React$useState2[0],\n      setFire = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isDarkTheme = _React$useState4[0],\n      setIsDarkTheme = _React$useState4[1];\n\n  var initialLoginState = {\n    isLoading: true,\n    userId: null,\n    userEmail: null\n  };\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      initializing = _useState2[0],\n      setInitializing = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(function () {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }\n\n    var subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n\n  var CustomDefaultTheme = _objectSpread(_objectSpread(_objectSpread({}, NavigationDefaultTheme), PaperDefaultTheme), {}, {\n    colors: _objectSpread(_objectSpread(_objectSpread({}, NavigationDefaultTheme.colors), PaperDefaultTheme.colors), {}, {\n      background: '#ffffff',\n      text: '#333333'\n    })\n  });\n\n  var CustomDarkTheme = _objectSpread(_objectSpread(_objectSpread({}, NavigationDarkTheme), PaperDarkTheme), {}, {\n    colors: _objectSpread(_objectSpread(_objectSpread({}, NavigationDarkTheme.colors), PaperDarkTheme.colors), {}, {\n      background: '#333333',\n      text: '#ffffff'\n    })\n  });\n\n  var theme = isDarkTheme ? CustomDarkTheme : CustomDefaultTheme;\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_Id':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userId: action.Id,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userId: action.id,\n          userEmail: action.email,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userId: null,\n          isLoading: false\n        });\n\n      case 'REGISTER':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userId: action.id,\n          isLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(user) {\n        var userId, email;\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userId = user.uid;\n                email = user.email;\n                _context.prev = 2;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('userId', userId));\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 10:\n                dispatch({\n                  type: 'LOGIN',\n                  id: userId,\n                  email: email\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[2, 7]], Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userId'));\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n                dispatch({\n                  type: 'LOGOUT'\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      signUp: function signUp() {},\n      toggleTheme: function toggleTheme() {\n        setIsDarkTheme(function (isDarkTheme) {\n          return !isDarkTheme;\n        });\n      }\n    };\n  }, []);\n  useEffect(function () {\n    setTimeout(function _callee() {\n      var userId;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userId = null;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userId'));\n\n            case 4:\n              userId = _context3.sent;\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 10:\n              dispatch({\n                type: 'RETRIEVE_Id',\n                id: userId\n              });\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 7]], Promise);\n    }, 1000);\n  }, []);\n\n  if (initializing) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  console.log(\"UsER\", loginState.userId);\n  return React.createElement(PaperProvider, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 5\n    }\n  }, React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, user !== null && loginState.userId === user.uid ? user.emailVerified ? React.createElement(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerContent, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 55\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"HomeDrawer\",\n    component: MainTabScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"SupportScreen\",\n    component: SupportScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"SettingsScreen\",\n    component: SettingsScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"BookmarkScreen\",\n    component: BookmarkScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  })) : React.createElement(VerifyEmail, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }) : React.createElement(RootStackScreen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["F:/React Native/MapExpo/App.js"],"names":["React","useEffect","useState","NavigationContainer","DefaultTheme","NavigationDefaultTheme","DarkTheme","NavigationDarkTheme","createDrawerNavigator","Provider","PaperProvider","PaperDefaultTheme","PaperDarkTheme","firebaseConfig","DrawerContent","MainTabScreen","SupportScreen","SettingsScreen","BookmarkScreen","VerifyEmail","AuthContext","firebase","RootStackScreen","AsyncStorage","Drawer","App","isLoadingComplete","isAuthenticationReady","isAuthenticated","fire","setFire","isDarkTheme","setIsDarkTheme","initialLoginState","isLoading","userId","userEmail","initializing","setInitializing","user","setUser","onAuthStateChanged","apps","length","initializeApp","subscriber","auth","CustomDefaultTheme","colors","background","text","CustomDarkTheme","theme","loginReducer","prevState","action","type","Id","id","email","useReducer","loginState","dispatch","authContext","useMemo","signIn","uid","setItem","console","log","signOut","removeItem","signUp","toggleTheme","setTimeout","getItem","flex","justifyContent","alignItems","emailVerified","props"],"mappings":"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","sourcesContent":["\n// import React from 'react';\n// import { StyleSheet, Text, View } from 'react-native';\n// import Routes from './src/navigation/Routes'\n\n// export default function App() {\n//   return  <Routes/>\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n// });\n\n\n\nimport React, { useEffect,useState } from 'react';\nimport { View, ActivityIndicator,Button } from 'react-native';\nimport { NavigationContainer, DefaultTheme as NavigationDefaultTheme, DarkTheme as NavigationDarkTheme } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { Provider as PaperProvider, DefaultTheme as PaperDefaultTheme, DarkTheme as PaperDarkTheme } from 'react-native-paper';\n// import * as firebase from 'firebase/app'\nimport { firebaseConfig } from './firebase'\nimport { DrawerContent } from './frontend/screens/DrawerContent';\n\nimport MainTabScreen from './frontend/screens/MainTabScreen';\nimport SupportScreen from './frontend/screens/SupportScreen';\nimport SettingsScreen from './frontend/screens/SettingsScreen';\nimport BookmarkScreen from './frontend/screens/BookmarkScreen';\nimport VerifyEmail from './frontend/screens/VerifyEmail';\n// import auth from '@react-native-firebase/auth';\nimport { AuthContext } from './frontend/components/context';\nimport firebase from 'firebase/app';\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport RootStackScreen from './frontend/screens/RootStackScreen';\n\nimport { AsyncStorage } from 'react-native';\nconst Drawer = createDrawerNavigator();\n\nconst App = () => {\n  const [fire, setFire] = React.useState({\n      isLoadingComplete: false,\n      isAuthenticationReady: false,\n      isAuthenticated: false,\n    \n  });\n  // const [userToken, setUserToken] = React.useState(null); \n\n  const [isDarkTheme, setIsDarkTheme] = React.useState(false);\n\n  const initialLoginState = {\n    isLoading: true,\n    userId: null,\n    userEmail:null\n    // isAuthenticationReady:false,\n    // isAuthenticated:false\n  };\n\n // Set an initializing state whilst Firebase connects\n  const [initializing, setInitializing] = useState(true);\n  const [user, setUser] = useState();\n\n  // Handle user state changes\n  function onAuthStateChanged(user) {\n    // console.log(\"AUTHSATECHANGED\")\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(() => {\n    if (!firebase.apps.length) { firebase.initializeApp(firebaseConfig); }\n    const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    // console.log(\"SUNSCRIBER\",subscriber)\n    return subscriber; // unsubscribe on unmount\n  }, []);\n\n    // Initialize firebase...\n    // if (!firebase.apps.length) { firebase.initializeApp(firebaseConfig); }\n    // console.log(firebaseConfig.apiKey)\n    // firebase.auth().onAuthStateChanged((user)=>{\n    //   console.log(user)\n    //   setFire({...fire,isAuthenticationReady: true});\n    // setFire({...fire,isAuthenticated: !!user});\n    // });\n  \n  // render() {\n    // if ( (!this.state.isLoadingComplete || !this.state.isAuthenticationReady) && !this.props.skipLoadingScreen) {\n    //   return (\n    //     <AppLoading\n    //       startAsync={this._loadResourcesAsync}\n    //       onError={this._handleLoadingError}\n    //       onFinish={this._handleFinishLoading}\n    //     />\n    //   );\n    // } else {\n    //   return (\n    //     <View style={styles.container}>\n    //       {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n    //       {Platform.OS === 'android' && <View style={styles.statusBarUnderlay} />}\n    //       {(this.state.isAuthenticated) ? <MainTabNavigator /> : <RootNavigation />}\n    //     </View>\n    //   );\n    // }\n  \n  // }\n  // if (firebase.apps.length === 0){\n  //  setUser(firebase.initializeApp(firebaseConfig)) \n  // } else{\n  //   setUser(firebase.app())\n  // }\n\n\n  const CustomDefaultTheme = {\n    ...NavigationDefaultTheme,\n    ...PaperDefaultTheme,\n    colors: {\n      ...NavigationDefaultTheme.colors,\n      ...PaperDefaultTheme.colors,\n      background: '#ffffff',\n      text: '#333333'\n    }\n  }\n\n  const CustomDarkTheme = {\n    ...NavigationDarkTheme,\n    ...PaperDarkTheme,\n    colors: {\n      ...NavigationDarkTheme.colors,\n      ...PaperDarkTheme.colors,\n      background: '#333333',\n      text: '#ffffff'\n    }\n  }\n\n  const theme = isDarkTheme ? CustomDarkTheme : CustomDefaultTheme;\n\n  const loginReducer = (prevState, action) => {\n    switch (action.type) {\n      case 'RETRIEVE_Id':\n        return {\n          ...prevState,\n          userId: action.Id,\n          isLoading: false,\n        };\n      case 'LOGIN':\n        return {\n          ...prevState,\n          userId: action.id,\n          userEmail:action.email,\n          isLoading: false,\n        };\n      case 'LOGOUT':\n        return {\n          ...prevState,\n          userId: null,\n          isLoading: false,\n        };\n      case 'REGISTER':\n        return {\n          ...prevState,\n          userId: action.id,\n          isLoading: false,\n        };\n    }\n  };\n\n  const [loginState, dispatch] = React.useReducer(loginReducer, initialLoginState);\n\n  const authContext = React.useMemo(() => ({\n    signIn: async (user) => {\n      // setUserToken('fgkj');\n      // setIsLoading(false);\n      // const userToken = String(aaaaaa);\n      // // console.log(userToken)\n      const userId=user.uid\n      // const userToken = \"toke1n  \";\n      // console.log(\"USERFOUND\",foundUser)\n      const email = user.email;\n\n      try {\n        await AsyncStorage.setItem('userId', userId);\n      } catch (e) {\n        console.log(e);\n      }\n      // console.log('user token: ', userToken);\n      dispatch({ type: 'LOGIN', id: userId, email: email });\n    },\n    signOut: async () => {\n      // setUserToken(null);\n      // setIsLoading(false);\n      try {\n        await AsyncStorage.removeItem('userId');\n      } catch (e) {\n        console.log(e);\n      }\n      dispatch({ type: 'LOGOUT' });\n    },\n    signUp: () => {\n      // setUserToken('fgkj');\n      // setIsLoading(false);\n    },\n    toggleTheme: () => {\n      setIsDarkTheme(isDarkTheme => !isDarkTheme);\n    }\n  }), []);\n\n  useEffect(() => {\n    setTimeout(async () => {\n      // setIsLoading(false);\n      let userId;\n      userId = null;\n      try {\n        userId = await AsyncStorage.getItem('userId');\n      } catch (e) {\n        console.log(e);\n      }\n      // console.log('user Id: ', userId);\n      dispatch({ type: 'RETRIEVE_Id', id: userId });\n    }, 1000);\n\n  }, []);\n \n\n  if (initializing) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  }\n  console.log(\"UsER\",loginState.userId)\n  // user={uid:\"abc\"}\n  // loginState.userId=\"abc\"\n  // {(user!==null)?user!==null? (\n  return (\n    <PaperProvider theme={theme}>\n      <AuthContext.Provider value={authContext}>\n        <NavigationContainer theme={theme}>\n          {(user!==null&&loginState.userId === user.uid) ? user.emailVerified? (\n        \n            <Drawer.Navigator drawerContent={props => <DrawerContent {...props} />}>\n              <Drawer.Screen name=\"HomeDrawer\" component={MainTabScreen} />\n              <Drawer.Screen name=\"SupportScreen\" component={SupportScreen} />\n              <Drawer.Screen name=\"SettingsScreen\" component={SettingsScreen} />\n              <Drawer.Screen name=\"BookmarkScreen\" component={BookmarkScreen} />\n            </Drawer.Navigator>\n          ):<VerifyEmail/>\n            :\n            <RootStackScreen />\n          }\n          \n        </NavigationContainer>\n      </AuthContext.Provider>\n    </PaperProvider>\n  );\n}\n\nexport default App;\n\n\n// ////////////////////////////////////////////////////////////////////////////\n\n\n// import React, { Fragment, Component } from 'react';\n// import ImagePicker from 'react-native-image-picker';\n// import {\n//   SafeAreaView,\n//   StyleSheet,\n//   ScrollView,\n//   View,\n//   Text,\n//   StatusBar,\n//   Image,\n//   Button,\n//   Dimensions,\n//   TouchableOpacity\n// } from 'react-native';\n\n// import {\n//   Header,\n//   LearnMoreLinks,\n//   Colors,\n//   DebugInstructions,\n//   ReloadInstructions,\n// } from 'react-native/Libraries/NewAppScreen';\n\n// const options = {\n//   title: 'Select Avatar',\n//   customButtons: [{ name: 'fb', title: 'Choose Photo from Facebook' }],\n//   storageOptions: {\n//     skipBackup: true,\n//     path: 'images',\n//   },\n// };\n// export default class App extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       filepath: {\n//         data: '',\n//         uri: ''\n//       },\n//       fileData: '',\n//       fileUri: ''\n//     }\n//   }\n\n//   chooseImage = () => {\n//     let options = {\n//       title: 'Select Image',\n//       customButtons: [\n//         { name: 'customOptionKey', title: 'Choose Photo from Custom Option' },\n//       ],\n//       storageOptions: {\n//         skipBackup: true,\n//         path: 'images',\n//       },\n//     };\n//     ImagePicker.showImagePicker(options, (response) => {\n//       console.log('Response = ', response);\n\n//       if (response.didCancel) {\n//         console.log('User cancelled image picker');\n//       } else if (response.error) {\n//         console.log('ImagePicker Error: ', response.error);\n//       } else if (response.customButton) {\n//         console.log('User tapped custom button: ', response.customButton);\n//         alert(response.customButton);\n//       } else {\n//         const source = { uri: response.uri };\n\n//         // You can also display the image using data:\n//         // const source = { uri: 'data:image/jpeg;base64,' + response.data };\n//         // alert(JSON.stringify(response));s\n//         console.log('response', JSON.stringify(response));\n//         this.setState({\n//           filePath: response,\n//           fileData: response.data,\n//           fileUri: response.uri\n//         });\n//       }\n//     });\n//   }\n\n//   launchCamera = () => {\n//     let options = {\n//       storageOptions: {\n//         skipBackup: true,\n//         path: 'images',\n//       },\n//     };\n//     ImagePicker.launchCamera(options, (response) => {\n//       console.log('Response = ', response);\n\n//       if (response.didCancel) {\n//         console.log('User cancelled image picker');\n//       } else if (response.error) {\n//         console.log('ImagePicker Error: ', response.error);\n//       } else if (response.customButton) {\n//         console.log('User tapped custom button: ', response.customButton);\n//         alert(response.customButton);\n//       } else {\n//         const source = { uri: response.uri };\n//         console.log('response', JSON.stringify(response));\n//         this.setState({\n//           filePath: response,\n//           fileData: response.data,\n//           fileUri: response.uri\n//         });\n//       }\n//     });\n\n//   }\n\n//   launchImageLibrary = () => {\n//     let options = {\n//       storageOptions: {\n//         skipBackup: true,\n//         path: 'images',\n//       },\n//     };\n//     ImagePicker.launchImageLibrary(options, (response) => {\n//       console.log('Response = ', response);\n\n//       if (response.didCancel) {\n//         console.log('User cancelled image picker');\n//       } else if (response.error) {\n//         console.log('ImagePicker Error: ', response.error);\n//       } else if (response.customButton) {\n//         console.log('User tapped custom button: ', response.customButton);\n//         alert(response.customButton);\n//       } else {\n//         const source = { uri: response.uri };\n//         console.log('response', JSON.stringify(response));\n//         this.setState({\n//           filePath: response,\n//           fileData: response.data,\n//           fileUri: response.uri\n//         });\n//       }\n//     });\n\n//   }\n\n//   renderFileData() {\n//     if (this.state.fileData) {\n//       return <Image source={{ uri: 'data:image/jpeg;base64,' + this.state.fileData }}\n//         style={styles.images}\n//       />\n//     } else {\n//       return <Image source={require('')}\n//         style={styles.images}\n//       />\n//     }\n//   }\n\n//   renderFileUri() {\n//     if (this.state.fileUri) {\n//       return <Image\n//         source={{ uri: this.state.fileUri }}\n//         style={styles.images}\n//       />\n//     } else {\n//       return <Image\n//         source={require('')}\n//         style={styles.images}\n//       />\n//     }\n//   }\n//   render() {\n//     return (\n//       <Fragment>\n//         <StatusBar barStyle=\"dark-content\" />\n//         <SafeAreaView>\n//           <View style={styles.body}>\n//             <Text style={{textAlign:'center',fontSize:20,paddingBottom:10}} >Pick Images from Camera & Gallery</Text>\n//             <View style={styles.ImageSections}>\n//               <View>\n//                 {this.renderFileData()}\n//                 <Text  style={{textAlign:'center'}}>Base 64 String</Text>\n//               </View>\n//               <View>\n//                 {this.renderFileUri()}\n//                 <Text style={{textAlign:'center'}}>File Uri</Text>\n//               </View>\n//             </View>\n\n//             <View style={styles.btnParentSection}>\n//               <TouchableOpacity onPress={this.chooseImage} style={styles.btnSection}  >\n//                 <Text style={styles.btnText}>Choose File</Text>\n//               </TouchableOpacity>\n\n//               <TouchableOpacity onPress={this.launchCamera} style={styles.btnSection}  >\n//                 <Text style={styles.btnText}>Directly Launch Camera</Text>\n//               </TouchableOpacity>\n\n//               <TouchableOpacity onPress={this.launchImageLibrary} style={styles.btnSection}  >\n//                 <Text style={styles.btnText}>Directly Launch Image Library</Text>\n//               </TouchableOpacity>\n//             </View>\n\n//           </View>\n//         </SafeAreaView>\n//       </Fragment>\n//     );\n//   }\n// };\n\n// const styles = StyleSheet.create({\n//   scrollView: {\n//     backgroundColor: Colors.lighter,\n//   },\n\n//   body: {\n//     backgroundColor: Colors.white,\n//     justifyContent: 'center',\n//     borderColor: 'black',\n//     borderWidth: 1,\n//     height: Dimensions.get('screen').height - 20,\n//     width: Dimensions.get('screen').width\n//   },\n//   ImageSections: {\n//     display: 'flex',\n//     flexDirection: 'row',\n//     paddingHorizontal: 8,\n//     paddingVertical: 8,\n//     justifyContent: 'center'\n//   },\n//   images: {\n//     width: 150,\n//     height: 150,\n//     borderColor: 'black',\n//     borderWidth: 1,\n//     marginHorizontal: 3\n//   },\n//   btnParentSection: {\n//     alignItems: 'center',\n//     marginTop:10\n//   },\n//   btnSection: {\n//     width: 225,\n//     height: 50,\n//     backgroundColor: '#DCDCDC',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     borderRadius: 3,\n//     marginBottom:10\n//   },\n//   btnText: {\n//     textAlign: 'center',\n//     color: 'gray',\n//     fontSize: 14,\n//     fontWeight:'bold'\n//   }\n// });"]},"metadata":{},"sourceType":"module"}